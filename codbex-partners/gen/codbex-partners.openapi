openapi: 3.0.3
info:
  title: Partners Management Application - OpenAPI 3.0
  version: 1.0.0
  description: Managing partners data
externalDocs:
  description: Find out more about Eclipse Dirigible
  url: https://dirigible.io
servers:
  - url: /services/ts
tags:
  - name: Customers
  - name: Suppliers
  - name: Customers
  - name: Suppliers
  - name: Manufacturers
  - name: Manufacturers
paths:
  /codbex-partners/gen/api/Customers/CustomerService.ts:
    get:
      summary: List Customer
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - Customers
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Customer'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create Customer
      tags:
        - Customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-partners/gen/api/Customers/CustomerService.ts/{id}:
    get:
      summary: Get Customer by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Customers
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Customer'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update Customer by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete Customer by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Customers
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-partners/gen/api/Customers/CustomerService.ts/count:
    get:
      summary: Count the number of Customer
      tags:
        - Customers
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of Customer by CustomerFilterOptions
      tags:
        - Customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                      Address: "abcd"
                      PostalCode: "abcd"
                      Email: "abcd"
                      Phone: "abcd"
                      Fax: "abcd"
                      TIN: "abcd"
                      IBAN: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
                      Address: "abcd"
                      PostalCode: "abcd"
                      Email: "abcd"
                      Phone: "abcd"
                      Fax: "abcd"
                      TIN: "abcd"
                      IBAN: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-partners/gen/api/Customers/CustomerService.ts/search:
    post:
      summary: Search Customer by CustomerFilterOptions
      tags:
        - Customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                      Address: "abcd"
                      PostalCode: "abcd"
                      Email: "abcd"
                      Phone: "abcd"
                      Fax: "abcd"
                      TIN: "abcd"
                      IBAN: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
                      Address: "abcd"
                      PostalCode: "abcd"
                      Email: "abcd"
                      Phone: "abcd"
                      Fax: "abcd"
                      TIN: "abcd"
                      IBAN: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Customer'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-partners/gen/api/Suppliers/SupplierService.ts:
    get:
      summary: List Supplier
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - Suppliers
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Supplier'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create Supplier
      tags:
        - Suppliers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-partners/gen/api/Suppliers/SupplierService.ts/{id}:
    get:
      summary: Get Supplier by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Suppliers
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Supplier'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update Supplier by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Suppliers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete Supplier by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Suppliers
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-partners/gen/api/Suppliers/SupplierService.ts/count:
    get:
      summary: Count the number of Supplier
      tags:
        - Suppliers
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of Supplier by SupplierFilterOptions
      tags:
        - Suppliers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                      Address: "abcd"
                      PostalCode: "abcd"
                      Email: "abcd"
                      Phone: "abcd"
                      Fax: "abcd"
                      TIN: "abcd"
                      IBAN: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
                      Address: "abcd"
                      PostalCode: "abcd"
                      Email: "abcd"
                      Phone: "abcd"
                      Fax: "abcd"
                      TIN: "abcd"
                      IBAN: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-partners/gen/api/Suppliers/SupplierService.ts/search:
    post:
      summary: Search Supplier by SupplierFilterOptions
      tags:
        - Suppliers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                      Address: "abcd"
                      PostalCode: "abcd"
                      Email: "abcd"
                      Phone: "abcd"
                      Fax: "abcd"
                      TIN: "abcd"
                      IBAN: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
                      Address: "abcd"
                      PostalCode: "abcd"
                      Email: "abcd"
                      Phone: "abcd"
                      Fax: "abcd"
                      TIN: "abcd"
                      IBAN: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Supplier'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-partners/gen/api/Customers/CustomerNoteService.ts:
    get:
      summary: List CustomerNote
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - Customers
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/CustomerNote'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create CustomerNote
      tags:
        - Customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerNote'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerNote'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-partners/gen/api/Customers/CustomerNoteService.ts/{id}:
    get:
      summary: Get CustomerNote by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Customers
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/CustomerNote'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update CustomerNote by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerNote'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerNote'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete CustomerNote by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Customers
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-partners/gen/api/Customers/CustomerNoteService.ts/count:
    get:
      summary: Count the number of CustomerNote
      tags:
        - Customers
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of CustomerNote by CustomerNoteFilterOptions
      tags:
        - Customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerNoteFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Note: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Note: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-partners/gen/api/Customers/CustomerNoteService.ts/search:
    post:
      summary: Search CustomerNote by CustomerNoteFilterOptions
      tags:
        - Customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerNoteFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Note: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Note: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/CustomerNote'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-partners/gen/api/Suppliers/SupplierNoteService.ts:
    get:
      summary: List SupplierNote
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - Suppliers
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SupplierNote'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create SupplierNote
      tags:
        - Suppliers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierNote'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierNote'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-partners/gen/api/Suppliers/SupplierNoteService.ts/{id}:
    get:
      summary: Get SupplierNote by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Suppliers
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SupplierNote'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update SupplierNote by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Suppliers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierNote'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierNote'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete SupplierNote by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Suppliers
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-partners/gen/api/Suppliers/SupplierNoteService.ts/count:
    get:
      summary: Count the number of SupplierNote
      tags:
        - Suppliers
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of SupplierNote by SupplierNoteFilterOptions
      tags:
        - Suppliers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierNoteFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Note: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Note: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-partners/gen/api/Suppliers/SupplierNoteService.ts/search:
    post:
      summary: Search SupplierNote by SupplierNoteFilterOptions
      tags:
        - Suppliers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierNoteFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Note: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Note: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SupplierNote'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-partners/gen/api/Manufacturers/ManufacturerNoteService.ts:
    get:
      summary: List ManufacturerNote
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - Manufacturers
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/ManufacturerNote'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create ManufacturerNote
      tags:
        - Manufacturers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManufacturerNote'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturerNote'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-partners/gen/api/Manufacturers/ManufacturerNoteService.ts/{id}:
    get:
      summary: Get ManufacturerNote by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Manufacturers
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/ManufacturerNote'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update ManufacturerNote by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Manufacturers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManufacturerNote'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturerNote'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete ManufacturerNote by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Manufacturers
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-partners/gen/api/Manufacturers/ManufacturerNoteService.ts/count:
    get:
      summary: Count the number of ManufacturerNote
      tags:
        - Manufacturers
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of ManufacturerNote by ManufacturerNoteFilterOptions
      tags:
        - Manufacturers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManufacturerNoteFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Note: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Note: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-partners/gen/api/Manufacturers/ManufacturerNoteService.ts/search:
    post:
      summary: Search ManufacturerNote by ManufacturerNoteFilterOptions
      tags:
        - Manufacturers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManufacturerNoteFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Note: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Note: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/ManufacturerNote'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-partners/gen/api/Manufacturers/ManufacturerService.ts:
    get:
      summary: List Manufacturer
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - Manufacturers
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Manufacturer'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create Manufacturer
      tags:
        - Manufacturers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Manufacturer'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manufacturer'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-partners/gen/api/Manufacturers/ManufacturerService.ts/{id}:
    get:
      summary: Get Manufacturer by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Manufacturers
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Manufacturer'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update Manufacturer by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Manufacturers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Manufacturer'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manufacturer'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete Manufacturer by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Manufacturers
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-partners/gen/api/Manufacturers/ManufacturerService.ts/count:
    get:
      summary: Count the number of Manufacturer
      tags:
        - Manufacturers
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of Manufacturer by ManufacturerFilterOptions
      tags:
        - Manufacturers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManufacturerFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-partners/gen/api/Manufacturers/ManufacturerService.ts/search:
    post:
      summary: Search Manufacturer by ManufacturerFilterOptions
      tags:
        - Manufacturers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManufacturerFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Manufacturer'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Customer:
      type: object
      required:
        - Name
        - Address
        - Email
        - City
        - Country
      properties:
        Id:
          type: integer
          format: int32
        Name:
          type: string
          minLength: 0
          maxLength: 100
        Address:
          type: string
          minLength: 0
          maxLength: 200
        PostalCode:
          type: string
          minLength: 0
          maxLength: 20
        Email:
          type: string
          minLength: 0
          maxLength: 100
        Phone:
          type: string
          minLength: 0
          maxLength: 20
        Fax:
          type: string
          minLength: 0
          maxLength: 20
        City:
          type: integer
          format: int32
        Country:
          type: integer
          format: int32
        TIN:
          type: string
          minLength: 0
          maxLength: 20
        IBAN:
          type: string
          minLength: 0
          maxLength: 36
    CustomerFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Address:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                PostalCode:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Email:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Phone:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Fax:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                City:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Country:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                TIN:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                IBAN:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Address:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                PostalCode:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Email:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Phone:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Fax:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                City:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Country:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                TIN:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                IBAN:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
            contains:
              type: object
              properties:
                Id:
                Name:
                  type: string
                  minLength: 0
                  maxLength: 100
                Address:
                  type: string
                  minLength: 0
                  maxLength: 200
                PostalCode:
                  type: string
                  minLength: 0
                  maxLength: 20
                Email:
                  type: string
                  minLength: 0
                  maxLength: 100
                Phone:
                  type: string
                  minLength: 0
                  maxLength: 20
                Fax:
                  type: string
                  minLength: 0
                  maxLength: 20
                City:
                Country:
                TIN:
                  type: string
                  minLength: 0
                  maxLength: 20
                IBAN:
                  type: string
                  minLength: 0
                  maxLength: 36
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 100
                Address:
                  type: string
                  minLength: 0
                  maxLength: 200
                PostalCode:
                  type: string
                  minLength: 0
                  maxLength: 20
                Email:
                  type: string
                  minLength: 0
                  maxLength: 100
                Phone:
                  type: string
                  minLength: 0
                  maxLength: 20
                Fax:
                  type: string
                  minLength: 0
                  maxLength: 20
                City:
                  type: integer
                  format: int32
                Country:
                  type: integer
                  format: int32
                TIN:
                  type: string
                  minLength: 0
                  maxLength: 20
                IBAN:
                  type: string
                  minLength: 0
                  maxLength: 36
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 100
                Address:
                  type: string
                  minLength: 0
                  maxLength: 200
                PostalCode:
                  type: string
                  minLength: 0
                  maxLength: 20
                Email:
                  type: string
                  minLength: 0
                  maxLength: 100
                Phone:
                  type: string
                  minLength: 0
                  maxLength: 20
                Fax:
                  type: string
                  minLength: 0
                  maxLength: 20
                City:
                  type: integer
                  format: int32
                Country:
                  type: integer
                  format: int32
                TIN:
                  type: string
                  minLength: 0
                  maxLength: 20
                IBAN:
                  type: string
                  minLength: 0
                  maxLength: 36
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 100
                Address:
                  type: string
                  minLength: 0
                  maxLength: 200
                PostalCode:
                  type: string
                  minLength: 0
                  maxLength: 20
                Email:
                  type: string
                  minLength: 0
                  maxLength: 100
                Phone:
                  type: string
                  minLength: 0
                  maxLength: 20
                Fax:
                  type: string
                  minLength: 0
                  maxLength: 20
                City:
                  type: integer
                  format: int32
                Country:
                  type: integer
                  format: int32
                TIN:
                  type: string
                  minLength: 0
                  maxLength: 20
                IBAN:
                  type: string
                  minLength: 0
                  maxLength: 36
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 100
                Address:
                  type: string
                  minLength: 0
                  maxLength: 200
                PostalCode:
                  type: string
                  minLength: 0
                  maxLength: 20
                Email:
                  type: string
                  minLength: 0
                  maxLength: 100
                Phone:
                  type: string
                  minLength: 0
                  maxLength: 20
                Fax:
                  type: string
                  minLength: 0
                  maxLength: 20
                City:
                  type: integer
                  format: int32
                Country:
                  type: integer
                  format: int32
                TIN:
                  type: string
                  minLength: 0
                  maxLength: 20
                IBAN:
                  type: string
                  minLength: 0
                  maxLength: 36
        $select:
          type: array
          example: ["Id", "Name", "Address", "PostalCode", "Email", "Phone", "Fax", "City", "Country", "TIN", "IBAN"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Name,Address,PostalCode,Email,Phone,Fax,City,Country,TIN,IBAN"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    Supplier:
      type: object
      required:
        - Name
        - Address
        - Email
        - City
        - Country
      properties:
        Id:
          type: integer
          format: int32
        Name:
          type: string
          minLength: 0
          maxLength: 100
        Address:
          type: string
          minLength: 0
          maxLength: 200
        PostalCode:
          type: string
          minLength: 0
          maxLength: 20
        Email:
          type: string
          minLength: 0
          maxLength: 100
        Phone:
          type: string
          minLength: 0
          maxLength: 20
        Fax:
          type: string
          minLength: 0
          maxLength: 20
        City:
          type: integer
          format: int32
        Country:
          type: integer
          format: int32
        TIN:
          type: string
          minLength: 0
          maxLength: 20
        IBAN:
          type: string
          minLength: 0
          maxLength: 36
    SupplierFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Address:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                PostalCode:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Email:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Phone:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Fax:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                City:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Country:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                TIN:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                IBAN:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Address:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                PostalCode:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Email:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Phone:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Fax:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                City:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Country:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                TIN:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                IBAN:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
            contains:
              type: object
              properties:
                Id:
                Name:
                  type: string
                  minLength: 0
                  maxLength: 100
                Address:
                  type: string
                  minLength: 0
                  maxLength: 200
                PostalCode:
                  type: string
                  minLength: 0
                  maxLength: 20
                Email:
                  type: string
                  minLength: 0
                  maxLength: 100
                Phone:
                  type: string
                  minLength: 0
                  maxLength: 20
                Fax:
                  type: string
                  minLength: 0
                  maxLength: 20
                City:
                Country:
                TIN:
                  type: string
                  minLength: 0
                  maxLength: 20
                IBAN:
                  type: string
                  minLength: 0
                  maxLength: 36
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 100
                Address:
                  type: string
                  minLength: 0
                  maxLength: 200
                PostalCode:
                  type: string
                  minLength: 0
                  maxLength: 20
                Email:
                  type: string
                  minLength: 0
                  maxLength: 100
                Phone:
                  type: string
                  minLength: 0
                  maxLength: 20
                Fax:
                  type: string
                  minLength: 0
                  maxLength: 20
                City:
                  type: integer
                  format: int32
                Country:
                  type: integer
                  format: int32
                TIN:
                  type: string
                  minLength: 0
                  maxLength: 20
                IBAN:
                  type: string
                  minLength: 0
                  maxLength: 36
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 100
                Address:
                  type: string
                  minLength: 0
                  maxLength: 200
                PostalCode:
                  type: string
                  minLength: 0
                  maxLength: 20
                Email:
                  type: string
                  minLength: 0
                  maxLength: 100
                Phone:
                  type: string
                  minLength: 0
                  maxLength: 20
                Fax:
                  type: string
                  minLength: 0
                  maxLength: 20
                City:
                  type: integer
                  format: int32
                Country:
                  type: integer
                  format: int32
                TIN:
                  type: string
                  minLength: 0
                  maxLength: 20
                IBAN:
                  type: string
                  minLength: 0
                  maxLength: 36
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 100
                Address:
                  type: string
                  minLength: 0
                  maxLength: 200
                PostalCode:
                  type: string
                  minLength: 0
                  maxLength: 20
                Email:
                  type: string
                  minLength: 0
                  maxLength: 100
                Phone:
                  type: string
                  minLength: 0
                  maxLength: 20
                Fax:
                  type: string
                  minLength: 0
                  maxLength: 20
                City:
                  type: integer
                  format: int32
                Country:
                  type: integer
                  format: int32
                TIN:
                  type: string
                  minLength: 0
                  maxLength: 20
                IBAN:
                  type: string
                  minLength: 0
                  maxLength: 36
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 100
                Address:
                  type: string
                  minLength: 0
                  maxLength: 200
                PostalCode:
                  type: string
                  minLength: 0
                  maxLength: 20
                Email:
                  type: string
                  minLength: 0
                  maxLength: 100
                Phone:
                  type: string
                  minLength: 0
                  maxLength: 20
                Fax:
                  type: string
                  minLength: 0
                  maxLength: 20
                City:
                  type: integer
                  format: int32
                Country:
                  type: integer
                  format: int32
                TIN:
                  type: string
                  minLength: 0
                  maxLength: 20
                IBAN:
                  type: string
                  minLength: 0
                  maxLength: 36
        $select:
          type: array
          example: ["Id", "Name", "Address", "PostalCode", "Email", "Phone", "Fax", "City", "Country", "TIN", "IBAN"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Name,Address,PostalCode,Email,Phone,Fax,City,Country,TIN,IBAN"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    CustomerNote:
      type: object
      required:
      properties:
        Id:
          type: integer
          format: int32
        Customer:
          type: integer
          format: int32
        Note:
          type: string
          minLength: 0
          maxLength: 5000
    CustomerNoteFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Customer:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Note:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 5000
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 5000
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Customer:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Note:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 5000
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 5000
            contains:
              type: object
              properties:
                Id:
                Customer:
                Note:
                  type: string
                  minLength: 0
                  maxLength: 5000
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Customer:
                  type: integer
                  format: int32
                Note:
                  type: string
                  minLength: 0
                  maxLength: 5000
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Customer:
                  type: integer
                  format: int32
                Note:
                  type: string
                  minLength: 0
                  maxLength: 5000
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Customer:
                  type: integer
                  format: int32
                Note:
                  type: string
                  minLength: 0
                  maxLength: 5000
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Customer:
                  type: integer
                  format: int32
                Note:
                  type: string
                  minLength: 0
                  maxLength: 5000
        $select:
          type: array
          example: ["Id", "Customer", "Note"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Customer,Note"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    SupplierNote:
      type: object
      required:
      properties:
        Id:
          type: integer
          format: int32
        Supplier:
          type: integer
          format: int32
        Note:
          type: string
          minLength: 0
          maxLength: 5000
    SupplierNoteFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Supplier:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Note:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 5000
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 5000
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Supplier:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Note:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 5000
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 5000
            contains:
              type: object
              properties:
                Id:
                Supplier:
                Note:
                  type: string
                  minLength: 0
                  maxLength: 5000
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Supplier:
                  type: integer
                  format: int32
                Note:
                  type: string
                  minLength: 0
                  maxLength: 5000
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Supplier:
                  type: integer
                  format: int32
                Note:
                  type: string
                  minLength: 0
                  maxLength: 5000
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Supplier:
                  type: integer
                  format: int32
                Note:
                  type: string
                  minLength: 0
                  maxLength: 5000
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Supplier:
                  type: integer
                  format: int32
                Note:
                  type: string
                  minLength: 0
                  maxLength: 5000
        $select:
          type: array
          example: ["Id", "Supplier", "Note"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Supplier,Note"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    ManufacturerNote:
      type: object
      required:
      properties:
        Id:
          type: integer
          format: int32
        Manufacturer:
          type: integer
          format: int32
        Note:
          type: string
          minLength: 0
          maxLength: 5000
    ManufacturerNoteFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Manufacturer:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Note:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 5000
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 5000
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Manufacturer:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Note:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 5000
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 5000
            contains:
              type: object
              properties:
                Id:
                Manufacturer:
                Note:
                  type: string
                  minLength: 0
                  maxLength: 5000
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Manufacturer:
                  type: integer
                  format: int32
                Note:
                  type: string
                  minLength: 0
                  maxLength: 5000
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Manufacturer:
                  type: integer
                  format: int32
                Note:
                  type: string
                  minLength: 0
                  maxLength: 5000
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Manufacturer:
                  type: integer
                  format: int32
                Note:
                  type: string
                  minLength: 0
                  maxLength: 5000
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Manufacturer:
                  type: integer
                  format: int32
                Note:
                  type: string
                  minLength: 0
                  maxLength: 5000
        $select:
          type: array
          example: ["Id", "Manufacturer", "Note"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Manufacturer,Note"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    Manufacturer:
      type: object
      required:
        - Name
        - City
        - Country
      properties:
        Id:
          type: integer
          format: int32
        Name:
          type: string
          minLength: 0
          maxLength: 20
        City:
          type: integer
          format: int32
        Country:
          type: integer
          format: int32
    ManufacturerFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                City:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Country:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                City:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Country:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
            contains:
              type: object
              properties:
                Id:
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
                City:
                Country:
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
                City:
                  type: integer
                  format: int32
                Country:
                  type: integer
                  format: int32
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
                City:
                  type: integer
                  format: int32
                Country:
                  type: integer
                  format: int32
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
                City:
                  type: integer
                  format: int32
                Country:
                  type: integer
                  format: int32
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
                City:
                  type: integer
                  format: int32
                Country:
                  type: integer
                  format: int32
        $select:
          type: array
          example: ["Id", "Name", "City", "Country"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Name,City,Country"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string